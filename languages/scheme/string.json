{
    "sectionkey": "strings",
    "name": "Strings",
    "help": "String blocks represent or manipulate bits of text (strings of characters)",
    "blocks": [
        {
            "blocktype": "expression",
            "id": "cdf5fa88-0d87-45d1-bf02-9ee4ec4c5565",
            "script": "\"{{1}}\"",
            "type": "string",
            "help": "Create a string literal by entering a list of characters",
            "sockets": [
                {
                    "name": "make string",
                    "type": "string"
                }
            ]
        },
        {
            "blocktype": "expression",
            "id": "e1951d04-dc2f-459e-9d7a-4796f29169ea",
            "type": "string",
            "script": "(string-append {{1}} {{2}})",
            "help": "returns a string by adding the second string to the end of the first string",
            "sockets": [
                {
                    "name": "",
                    "type": "string",
                    "value": "hello"
                },
                {
                    "name": "with",
                    "type": "string",
                    "value": "world",
		    "suffix":"appended"
                }
            ]
        },
        {
            "blocktype": "expression",
            "id": "3889BB61-FC62-4BED-B0EC-792AF636EC18",
            "type": "boolean",
            "script": "(string? {{1}})",
            "help": "Returns the boolean value true if the argument is a string, false otherwise.",
            "sockets": [
                {
                    "name": "is string? ",
                    "type": "string",
                    "value": "hello"
                }
            ]
        },
        {
            "blocktype": "expression",
            "id": "6BA0B0CF-6F22-4384-8A16-630C745FA3D3",
            "script": "(make-string (string-ref {{1}} {{2}}))",
            "type": "string",
            "help": "Return a string of length 1 from the character at the specified index of the specified string.",
            "sockets": [
                {
                    "name": "string",
                    "type": "string",
                    "value": null
                },
                {
                    "name": "substring at",
                    "type": "number",
                    "value": "0"
                }
            ]
        },
        {
            "blocktype": "expression",
            "id": "A41F840C-C64A-4047-9EBD-CF7152EA5D7B",
            "script": "(substring {{1}} {{2}} {{3}})",
            "type": "string",
            "help": "get the substring starting at the given index of named string and ending at the second given index",
            "sockets": [
                {
                    "name": "string",
                    "type": "string",
                    "value": null
                },
                {
                    "name": "substring from",
                    "type": "number",
                    "value": "0"
                },
                {
                    "name": "to",
                    "type": "number",
                    "value": "0"
                }
            ]
        },
        {
            "blocktype": "expression",
            "id": "c1eda8ae-b77c-4f5f-9b9f-c11b65235765",
            "script": "(string->list {{1}})",
            "type": "list",
            "help": "Returns a list of the characters in the string",
            "sockets": [
                {
                    "name": "list of characters in ",
                    "type": "string",
                    "suffix": "length"
                }
            ]
        },
        {
            "blocktype": "expression",
            "id": "cc005f19-e1b9-4f74-8fd0-91faccedd370",
            "script": "(string>? {{1}} {{2}})",
            "type": "boolean",
            "help": "Does the first string come after the second string in lexicographic ordering?",
            "sockets": [
                {
                    "name": "",
                    "type": "string"
                },
                {
                    "name": "after",
                    "type": "string"
                }
            ]
        },
        {
            "blocktype": "expression",
            "id": "037BB272-ADA5-41E4-BE9E-5FACA42F02C8",
            "script": "(string<? {{1}} {{2}})",
            "type": "boolean",
            "help": "Does the first string come before the second string in lexicographic ordering?",
            "sockets": [
                {
                    "name": "",
                    "type": "string"
                },
                {
                    "name": "before",
                    "type": "string"
                }
            ]
        },
        {
            "blocktype": "expression",
            "id": "85CA02CB-229F-4DF5-8400-4AFA2BA8E627",
            "script": "(string-trim {{1}} {{2}})",
            "type": "string",
            "help": "change to uppercase",
            "sockets": [
                {
                    "name": "to uppercase",
                    "type": "string",
                    "value": null
                }
            ]
        },
	{
            "blocktype": "expression",
            "id": "85CA02CB-229F-4DF5-8400-4AFA2BA8E627",
            "script": "(string-replace {{1}} {{2}} {{3}})",
            "type": "string",
            "help": "Returns the string with all occurrences of the second string replaced by the third string",
            "sockets": [
                {
                    "name": "string",
                    "type": "string",
                    "value": " "
                },
		{
                    "name": "with all ",
                    "type": "string",
                    "value": " "
                },
		{
                    "name": "replaced by ",
                    "type": "string",
                    "value": " "
                }
            ]
        },
        {
            "blocktype": "expression",
            "id": "DBA355CF-0F3A-4BA1-BBD7-2F8BDCE8C3CC",
            "type": "boolean",
            "script": "(equal? {{1}} {{2}})",
            "help": "two strings are equal",
            "sockets": [
                {
                    "name": "",
                    "type": "string",
                    "value": " "
                },
                {
                    "name": "=",
                    "type": "string",
                    "value": " "
                }
            ]
        },
        {
            "blocktype": "expression",
            "id": "46391AF0-3002-4A58-85BA-C670FE743219",
            "type": "boolean",
            "script": "(not (equal? {{1}} {{2}}))",
            "help": "two strings are not equal",
            "sockets": [
                {
                    "name": "",
                    "type": "string",
                    "value": " "
                },
                {
                    "name": "â‰ ",
                    "type": "string",
                    "value": " "
                }
            ]
        },

    ]
}
